{"ast":null,"code":"import _objectSpread from\"/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useRef}from\"react\";import Grid from\"@mui/material/Grid\";import Card from\"@mui/material/Card\";import CardContent from\"@mui/material/CardContent\";import Typography from\"@mui/material/Typography\";import Slider from\"@mui/material/Slider\";import Button from\"@mui/material/Button\";import Box from\"@mui/material/Box\";import Snackbar from\"@mui/material/Snackbar\";import Alert from\"@mui/material/Alert\";import{LineChart,Line,XAxis,YAxis,Tooltip,Legend,ResponsiveContainer}from\"recharts\";import SettingsIcon from\"@mui/icons-material/Settings\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function GpuMonitor(){const[gpus,setGpus]=useState([]);const[history,setHistory]=useState({});const[ocValues,setOcValues]=useState({});const[snackbar,setSnackbar]=useState(null);const[fetchError,setFetchError]=useState(null);const intervalRef=useRef(null);// Poll stats every 2s\nuseEffect(()=>{const fetchStats=async()=>{try{const res=await fetch(\"/api/gpu/stats\");// Fix: check if the result is HTML (error) instead of JSON\nconst text=await res.text();try{const data=JSON.parse(text);if(!data.gpus)throw new Error(\"No GPU stats found\");setGpus(data.gpus);setFetchError(null);setHistory(prev=>{const updated=_objectSpread({},prev);data.gpus.forEach(gpu=>{if(!updated[gpu.index])updated[gpu.index]=[];const arr=[...updated[gpu.index],_objectSpread(_objectSpread({},gpu),{},{time:Date.now()})];updated[gpu.index]=arr.slice(-30);// last 60s if polling every 2s\n});return updated;});}catch(jsonErr){setFetchError(\"Could not fetch GPU stats (invalid response)\");setGpus([]);}}catch(err){setFetchError(\"Could not fetch GPU stats (server offline?)\");setGpus([]);}};fetchStats();intervalRef.current=setInterval(fetchStats,2000);return()=>{if(intervalRef.current)clearInterval(intervalRef.current);};},[]);const handleOcChange=(idx,field,value)=>{setOcValues(prev=>_objectSpread(_objectSpread({},prev),{},{[idx]:_objectSpread(_objectSpread({},prev[idx]),{},{[field]:value})}));};const handleOcApply=async gpu=>{const values=ocValues[gpu.index]||{};try{var _gpu$controls,_gpu$controls2,_gpu$controls3,_gpu$controls4;const body={index:gpu.index};if((_gpu$controls=gpu.controls)!==null&&_gpu$controls!==void 0&&_gpu$controls.fan&&values.fan!==undefined)body.fan=values.fan;if((_gpu$controls2=gpu.controls)!==null&&_gpu$controls2!==void 0&&_gpu$controls2.power&&values.powerLimit!==undefined)body.powerLimit=values.powerLimit;if((_gpu$controls3=gpu.controls)!==null&&_gpu$controls3!==void 0&&_gpu$controls3.coreClock&&values.coreClock!==undefined)body.coreClock=values.coreClock;if((_gpu$controls4=gpu.controls)!==null&&_gpu$controls4!==void 0&&_gpu$controls4.memClock&&values.memClock!==undefined)body.memClock=values.memClock;if(Object.keys(body).length<=1){setSnackbar({msg:\"No changes selected.\",type:\"error\"});return;}const res=await fetch(\"/api/gpu/overclock\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});// Defensive: check for JSON\nlet resp;try{resp=await res.json();}catch(_unused){resp={};}if(res.ok){setSnackbar({msg:\"Settings applied!\",type:\"success\"});}else{var _resp;setSnackbar({msg:((_resp=resp)===null||_resp===void 0?void 0:_resp.error)||\"Failed to apply settings\",type:\"error\"});}}catch(err){setSnackbar({msg:err.message,type:\"error\"});}};return/*#__PURE__*/_jsxs(Box,{sx:{background:\"radial-gradient(circle at 60% 40%, #252842 65%, #191c2b 100%)\",minHeight:\"100vh\",py:6,px:{xs:1,md:6}},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h3\",sx:{color:\"#00f6ff\",fontWeight:900,letterSpacing:3,textShadow:\"0 0 16px #23d6ff55\",mb:6,textAlign:\"center\"},children:[/*#__PURE__*/_jsx(SettingsIcon,{sx:{fontSize:\"2.5rem\",mr:2,verticalAlign:\"-7px\"}}),\"GPU Monitor & Control\"]}),fetchError&&/*#__PURE__*/_jsx(Box,{sx:{color:\"#fff\",background:\"#f13\",px:4,py:2,mb:4,borderRadius:2,textAlign:\"center\",fontWeight:600},children:fetchError}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:5,justifyContent:\"center\",children:gpus.map(gpu=>{var _gpu$power,_gpu$controls5,_ocValues$gpu$index$f,_ocValues$gpu$index,_gpu$controls6,_ocValues$gpu$index$p,_ocValues$gpu$index2,_gpu$controls7,_ocValues$gpu$index$c,_ocValues$gpu$index3,_gpu$controls8,_ocValues$gpu$index$m,_ocValues$gpu$index4,_gpu$controls9,_gpu$controls0,_gpu$controls1,_gpu$controls10;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:7,lg:6,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:6,background:\"linear-gradient(120deg, #20243c 85%, #1a1d2a 100%)\",boxShadow:6,minHeight:350,mb:4},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{color:\"#f0a3ff\",fontWeight:700},children:[gpu.name,\" (#\",gpu.index,\")\"]}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",gap:4,flexWrap:\"wrap\",alignItems:\"center\",my:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{color:\"#ffe066\"},children:[gpu.temp,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{color:\"#00e676\"},children:[(_gpu$power=gpu.power)===null||_gpu$power===void 0?void 0:_gpu$power.toFixed(2),\"W\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{color:\"#2979ff\"},children:[gpu.util,\"%\"]})]}),/*#__PURE__*/_jsxs(Box,{sx:{color:\"#b2b2b2\",mb:1},children:[\"Fan: \",/*#__PURE__*/_jsxs(\"b\",{children:[gpu.fan,\"%\"]}),\" \\xA0|\\xA0 Clock: \",/*#__PURE__*/_jsxs(\"b\",{children:[gpu.coreClock,\" MHz\"]}),\" \\xA0|\\xA0 Mem: \",/*#__PURE__*/_jsxs(\"b\",{children:[gpu.memClock,\" MHz\"]})]}),/*#__PURE__*/_jsxs(Box,{sx:{color:\"#b2b2b2\",mb:1},children:[\"VRAM: \",/*#__PURE__*/_jsxs(\"b\",{children:[gpu.memUsed,\" / \",gpu.memTotal,\" MiB\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{height:170,mt:2},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:history[gpu.index]||[],children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\",hide:true}),/*#__PURE__*/_jsx(YAxis,{domain:['auto','auto']}),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:t=>new Date(t).toLocaleTimeString(),formatter:(v,n)=>[v,n.toUpperCase()]}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"temp\",stroke:\"#ffbe0b\",dot:false,name:\"Temp\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"power\",stroke:\"#00e676\",dot:false,name:\"Power\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"util\",stroke:\"#2979ff\",dot:false,name:\"Util\"})]})})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[((_gpu$controls5=gpu.controls)===null||_gpu$controls5===void 0?void 0:_gpu$controls5.fan)&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Fan Speed (%)\"}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:(_ocValues$gpu$index$f=(_ocValues$gpu$index=ocValues[gpu.index])===null||_ocValues$gpu$index===void 0?void 0:_ocValues$gpu$index.fan)!==null&&_ocValues$gpu$index$f!==void 0?_ocValues$gpu$index$f:gpu.fan,onChange:(_,v)=>handleOcChange(gpu.index,\"fan\",v),valueLabelDisplay:\"auto\",sx:{color:\"#ffbe0b\"}})]}),((_gpu$controls6=gpu.controls)===null||_gpu$controls6===void 0?void 0:_gpu$controls6.power)&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Power Limit (W)\"}),/*#__PURE__*/_jsx(Slider,{min:50,max:gpu.powerLimit,value:(_ocValues$gpu$index$p=(_ocValues$gpu$index2=ocValues[gpu.index])===null||_ocValues$gpu$index2===void 0?void 0:_ocValues$gpu$index2.powerLimit)!==null&&_ocValues$gpu$index$p!==void 0?_ocValues$gpu$index$p:gpu.powerLimit,onChange:(_,v)=>handleOcChange(gpu.index,\"powerLimit\",v),valueLabelDisplay:\"auto\",sx:{color:\"#00e676\"}})]}),((_gpu$controls7=gpu.controls)===null||_gpu$controls7===void 0?void 0:_gpu$controls7.coreClock)&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Core Clock Offset (MHz)\"}),/*#__PURE__*/_jsx(Slider,{min:-300,max:300,value:(_ocValues$gpu$index$c=(_ocValues$gpu$index3=ocValues[gpu.index])===null||_ocValues$gpu$index3===void 0?void 0:_ocValues$gpu$index3.coreClock)!==null&&_ocValues$gpu$index$c!==void 0?_ocValues$gpu$index$c:0,onChange:(_,v)=>handleOcChange(gpu.index,\"coreClock\",v),valueLabelDisplay:\"auto\",sx:{color:\"#2979ff\"}})]}),((_gpu$controls8=gpu.controls)===null||_gpu$controls8===void 0?void 0:_gpu$controls8.memClock)&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Memory Clock Offset (MHz)\"}),/*#__PURE__*/_jsx(Slider,{min:-1000,max:2000,value:(_ocValues$gpu$index$m=(_ocValues$gpu$index4=ocValues[gpu.index])===null||_ocValues$gpu$index4===void 0?void 0:_ocValues$gpu$index4.memClock)!==null&&_ocValues$gpu$index$m!==void 0?_ocValues$gpu$index$m:0,onChange:(_,v)=>handleOcChange(gpu.index,\"memClock\",v),valueLabelDisplay:\"auto\",sx:{color:\"#ab47bc\"}})]}),(((_gpu$controls9=gpu.controls)===null||_gpu$controls9===void 0?void 0:_gpu$controls9.fan)||((_gpu$controls0=gpu.controls)===null||_gpu$controls0===void 0?void 0:_gpu$controls0.power)||((_gpu$controls1=gpu.controls)===null||_gpu$controls1===void 0?void 0:_gpu$controls1.coreClock)||((_gpu$controls10=gpu.controls)===null||_gpu$controls10===void 0?void 0:_gpu$controls10.memClock))&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",sx:{mt:2},onClick:()=>handleOcApply(gpu),startIcon:/*#__PURE__*/_jsx(SettingsIcon,{}),children:\"Apply Changes\"})]})]})})},gpu.index);})}),/*#__PURE__*/_jsx(Snackbar,{open:!!snackbar,autoHideDuration:5000,onClose:()=>setSnackbar(null),anchorOrigin:{vertical:\"bottom\",horizontal:\"center\"},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setSnackbar(null),severity:(snackbar===null||snackbar===void 0?void 0:snackbar.type)||\"success\",children:snackbar===null||snackbar===void 0?void 0:snackbar.msg})})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","Grid","Card","CardContent","Typography","Slider","Button","Box","Snackbar","Alert","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","SettingsIcon","jsx","_jsx","jsxs","_jsxs","GpuMonitor","gpus","setGpus","history","setHistory","ocValues","setOcValues","snackbar","setSnackbar","fetchError","setFetchError","intervalRef","fetchStats","res","fetch","text","data","JSON","parse","Error","prev","updated","_objectSpread","forEach","gpu","index","arr","time","Date","now","slice","jsonErr","err","current","setInterval","clearInterval","handleOcChange","idx","field","value","handleOcApply","values","_gpu$controls","_gpu$controls2","_gpu$controls3","_gpu$controls4","body","controls","fan","undefined","power","powerLimit","coreClock","memClock","Object","keys","length","msg","type","method","headers","stringify","resp","json","_unused","ok","_resp","error","message","sx","background","minHeight","py","px","xs","md","children","variant","color","fontWeight","letterSpacing","textShadow","mb","textAlign","fontSize","mr","verticalAlign","borderRadius","container","spacing","justifyContent","map","_gpu$power","_gpu$controls5","_ocValues$gpu$index$f","_ocValues$gpu$index","_gpu$controls6","_ocValues$gpu$index$p","_ocValues$gpu$index2","_gpu$controls7","_ocValues$gpu$index$c","_ocValues$gpu$index3","_gpu$controls8","_ocValues$gpu$index$m","_ocValues$gpu$index4","_gpu$controls9","_gpu$controls0","_gpu$controls1","_gpu$controls10","item","lg","boxShadow","name","display","gap","flexWrap","alignItems","my","temp","toFixed","util","memUsed","memTotal","height","mt","width","dataKey","hide","domain","labelFormatter","t","toLocaleTimeString","formatter","v","n","toUpperCase","stroke","dot","min","max","onChange","_","valueLabelDisplay","onClick","startIcon","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity"],"sources":["/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/src/GpuMonitor.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\n\ntype GpuStat = {\n  index: number;\n  name: string;\n  temp: number;\n  util: number;\n  fan: number;\n  coreClock: number;\n  memClock: number;\n  power: number;\n  powerLimit: number;\n  memUsed: number;\n  memTotal: number;\n  controls?: {\n    fan?: boolean;\n    power?: boolean;\n    coreClock?: boolean;\n    memClock?: boolean;\n  };\n};\n\ntype HistoryPoint = GpuStat & { time: number };\n\nexport default function GpuMonitor() {\n  const [gpus, setGpus] = useState<GpuStat[]>([]);\n  const [history, setHistory] = useState<{ [idx: number]: HistoryPoint[] }>({});\n  const [ocValues, setOcValues] = useState<{ [idx: number]: any }>({});\n  const [snackbar, setSnackbar] = useState<{ msg: string, type: \"success\" | \"error\" } | null>(null);\n  const [fetchError, setFetchError] = useState<string | null>(null);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Poll stats every 2s\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const res = await fetch(\"/api/gpu/stats\");\n        // Fix: check if the result is HTML (error) instead of JSON\n        const text = await res.text();\n        try {\n          const data = JSON.parse(text);\n          if (!data.gpus) throw new Error(\"No GPU stats found\");\n          setGpus(data.gpus);\n          setFetchError(null);\n          setHistory(prev => {\n            const updated = { ...prev };\n            data.gpus.forEach((gpu: GpuStat) => {\n              if (!updated[gpu.index]) updated[gpu.index] = [];\n              const arr = [...updated[gpu.index], { ...gpu, time: Date.now() }];\n              updated[gpu.index] = arr.slice(-30); // last 60s if polling every 2s\n            });\n            return updated;\n          });\n        } catch (jsonErr: any) {\n          setFetchError(\"Could not fetch GPU stats (invalid response)\");\n          setGpus([]);\n        }\n      } catch (err: any) {\n        setFetchError(\"Could not fetch GPU stats (server offline?)\");\n        setGpus([]);\n      }\n    };\n    fetchStats();\n    intervalRef.current = setInterval(fetchStats, 2000);\n    return () => { if (intervalRef.current) clearInterval(intervalRef.current); };\n  }, []);\n\n  const handleOcChange = (idx: number, field: string, value: number) => {\n    setOcValues(prev => ({\n      ...prev,\n      [idx]: { ...prev[idx], [field]: value }\n    }));\n  };\n\n  const handleOcApply = async (gpu: GpuStat) => {\n    const values = ocValues[gpu.index] || {};\n    try {\n      const body: any = { index: gpu.index };\n      if (gpu.controls?.fan && values.fan !== undefined) body.fan = values.fan;\n      if (gpu.controls?.power && values.powerLimit !== undefined) body.powerLimit = values.powerLimit;\n      if (gpu.controls?.coreClock && values.coreClock !== undefined) body.coreClock = values.coreClock;\n      if (gpu.controls?.memClock && values.memClock !== undefined) body.memClock = values.memClock;\n\n      if (Object.keys(body).length <= 1) {\n        setSnackbar({ msg: \"No changes selected.\", type: \"error\" });\n        return;\n      }\n\n      const res = await fetch(\"/api/gpu/overclock\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n      });\n\n      // Defensive: check for JSON\n      let resp;\n      try {\n        resp = await res.json();\n      } catch {\n        resp = {};\n      }\n\n      if (res.ok) {\n        setSnackbar({ msg: \"Settings applied!\", type: \"success\" });\n      } else {\n        setSnackbar({ msg: resp?.error || \"Failed to apply settings\", type: \"error\" });\n      }\n    } catch (err: any) {\n      setSnackbar({ msg: err.message, type: \"error\" });\n    }\n  };\n\n  return (\n    <Box sx={{\n      background: \"radial-gradient(circle at 60% 40%, #252842 65%, #191c2b 100%)\",\n      minHeight: \"100vh\",\n      py: 6,\n      px: { xs: 1, md: 6 },\n    }}>\n      <Typography variant=\"h3\" sx={{\n        color: \"#00f6ff\",\n        fontWeight: 900,\n        letterSpacing: 3,\n        textShadow: \"0 0 16px #23d6ff55\",\n        mb: 6,\n        textAlign: \"center\"\n      }}>\n        <SettingsIcon sx={{ fontSize: \"2.5rem\", mr: 2, verticalAlign: \"-7px\" }} />\n        GPU Monitor &amp; Control\n      </Typography>\n      {fetchError &&\n        <Box sx={{ color: \"#fff\", background: \"#f13\", px: 4, py: 2, mb: 4, borderRadius: 2, textAlign: \"center\", fontWeight: 600 }}>\n          {fetchError}\n        </Box>\n      }\n      <Grid container spacing={5} justifyContent=\"center\">\n        {gpus.map(gpu => (\n          <Grid item xs={12} md={7} lg={6} key={gpu.index}>\n            <Card sx={{\n              borderRadius: 6,\n              background: \"linear-gradient(120deg, #20243c 85%, #1a1d2a 100%)\",\n              boxShadow: 6,\n              minHeight: 350,\n              mb: 4\n            }}>\n              <CardContent>\n                <Typography variant=\"h5\" sx={{ color: \"#f0a3ff\", fontWeight: 700 }}>\n                  {gpu.name} (#{gpu.index})\n                </Typography>\n                <Box sx={{ display: \"flex\", gap: 4, flexWrap: \"wrap\", alignItems: \"center\", my: 2 }}>\n                  <Typography variant=\"h4\" sx={{ color: \"#ffe066\" }}>\n                    {gpu.temp}°C\n                  </Typography>\n                  <Typography variant=\"h5\" sx={{ color: \"#00e676\" }}>\n                    {gpu.power?.toFixed(2)}W\n                  </Typography>\n                  <Typography variant=\"h5\" sx={{ color: \"#2979ff\" }}>\n                    {gpu.util}%\n                  </Typography>\n                </Box>\n                <Box sx={{ color: \"#b2b2b2\", mb: 1 }}>\n                  Fan: <b>{gpu.fan}%</b> &nbsp;|&nbsp; Clock: <b>{gpu.coreClock} MHz</b> &nbsp;|&nbsp; Mem: <b>{gpu.memClock} MHz</b>\n                </Box>\n                <Box sx={{ color: \"#b2b2b2\", mb: 1 }}>\n                  VRAM: <b>{gpu.memUsed} / {gpu.memTotal} MiB</b>\n                </Box>\n                <Box sx={{ height: 170, mt: 2 }}>\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={history[gpu.index] || []}>\n                      <XAxis dataKey=\"time\" hide />\n                      <YAxis domain={['auto', 'auto']} />\n                      <Tooltip\n                        labelFormatter={t => new Date(t).toLocaleTimeString()}\n                        formatter={(v: any, n: any) => [v, n.toUpperCase()]}\n                      />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"temp\" stroke=\"#ffbe0b\" dot={false} name=\"Temp\" />\n                      <Line type=\"monotone\" dataKey=\"power\" stroke=\"#00e676\" dot={false} name=\"Power\" />\n                      <Line type=\"monotone\" dataKey=\"util\" stroke=\"#2979ff\" dot={false} name=\"Util\" />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </Box>\n                {/* Overclock Controls */}\n                <Box sx={{ mt: 3 }}>\n                  {gpu.controls?.fan && (\n                    <Box mb={2}>\n                      <Typography>Fan Speed (%)</Typography>\n                      <Slider\n                        min={0} max={100}\n                        value={ocValues[gpu.index]?.fan ?? gpu.fan}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"fan\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#ffbe0b\" }}\n                      />\n                    </Box>\n                  )}\n                  {gpu.controls?.power && (\n                    <Box mb={2}>\n                      <Typography>Power Limit (W)</Typography>\n                      <Slider\n                        min={50} max={gpu.powerLimit}\n                        value={ocValues[gpu.index]?.powerLimit ?? gpu.powerLimit}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"powerLimit\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#00e676\" }}\n                      />\n                    </Box>\n                  )}\n                  {gpu.controls?.coreClock && (\n                    <Box mb={2}>\n                      <Typography>Core Clock Offset (MHz)</Typography>\n                      <Slider\n                        min={-300} max={300}\n                        value={ocValues[gpu.index]?.coreClock ?? 0}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"coreClock\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#2979ff\" }}\n                      />\n                    </Box>\n                  )}\n                  {gpu.controls?.memClock && (\n                    <Box mb={2}>\n                      <Typography>Memory Clock Offset (MHz)</Typography>\n                      <Slider\n                        min={-1000} max={2000}\n                        value={ocValues[gpu.index]?.memClock ?? 0}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"memClock\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#ab47bc\" }}\n                      />\n                    </Box>\n                  )}\n                  {(gpu.controls?.fan || gpu.controls?.power || gpu.controls?.coreClock || gpu.controls?.memClock) && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      sx={{ mt: 2 }}\n                      onClick={() => handleOcApply(gpu)}\n                      startIcon={<SettingsIcon />}\n                    >\n                      Apply Changes\n                    </Button>\n                  )}\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      {/* Snackbar for errors/success */}\n      <Snackbar\n        open={!!snackbar}\n        autoHideDuration={5000}\n        onClose={() => setSnackbar(null)}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      >\n        <Alert onClose={() => setSnackbar(null)} severity={snackbar?.type || \"success\"}>\n          {snackbar?.msg}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}