{"ast":null,"code":"var _jsxFileName = \"/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/src/MinerManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:4201/api/miner\";\nexport default function MinerManager({\n  network\n}) {\n  _s();\n  const [running, setRunning] = useState(false);\n  const [mode, setMode] = useState(\"POOL\");\n  const [accepted, setAccepted] = useState(0);\n  const [rejected, setRejected] = useState(0);\n  const [stats, setStats] = useState(\"\");\n  const [latestLog, setLatestLog] = useState(\"\");\n\n  // Sync network with backend when network prop changes\n  useEffect(() => {\n    if (network === \"mainnet\" || network === \"testnet\") {\n      fetch(`${API_BASE}/network`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          network\n        })\n      });\n    }\n  }, [network]);\n  const refreshStatus = async () => {\n    const res = await fetch(`${API_BASE}/status`);\n    const data = await res.json();\n    setRunning(data.running);\n    setMode(data.mode);\n    setAccepted(data.accepted);\n    setRejected(data.rejected);\n    setStats(data.latestStats);\n    setLatestLog(data.latestLogLine);\n  };\n  const startMiner = async () => {\n    await fetch(`${API_BASE}/start`, {\n      method: \"POST\"\n    });\n    await refreshStatus();\n  };\n  const stopMiner = async () => {\n    await fetch(`${API_BASE}/stop`, {\n      method: \"POST\"\n    });\n    await refreshStatus();\n  };\n  const toggleMode = async () => {\n    await fetch(`${API_BASE}/toggle`, {\n      method: \"POST\"\n    });\n    await refreshStatus();\n  };\n  useEffect(() => {\n    refreshStatus();\n    const interval = setInterval(refreshStatus, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#111\",\n      color: \"#fff\",\n      padding: 24,\n      borderRadius: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Miner Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: running ? \"lime\" : \"red\"\n        },\n        children: running ? \"Running\" : \"Stopped\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Network:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), \" \", network]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \" \", mode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Stats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" \", stats || \"Waiting for miner output...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Shares:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" Accepted: \", accepted, \" | Rejected: \", rejected]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Latest Log:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: latestLog.trim()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startMiner,\n        disabled: running,\n        children: \"Start Miner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopMiner,\n        disabled: !running,\n        children: \"Stop Miner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMode,\n        children: \"Toggle Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(MinerManager, \"EGuiUywfatc0p2HQj4hR7hwkyKE=\");\n_c = MinerManager;\nvar _c;\n$RefreshReg$(_c, \"MinerManager\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_BASE","MinerManager","network","_s","running","setRunning","mode","setMode","accepted","setAccepted","rejected","setRejected","stats","setStats","latestLog","setLatestLog","fetch","method","headers","body","JSON","stringify","refreshStatus","res","data","json","latestStats","latestLogLine","startMiner","stopMiner","toggleMode","interval","setInterval","clearInterval","style","background","color","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","trim","marginTop","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/src/MinerManager.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ntype MinerManagerProps = {\n  network: \"mainnet\" | \"testnet\";\n};\n\nconst API_BASE = \"http://localhost:4201/api/miner\";\n\nexport default function MinerManager({ network }: MinerManagerProps) {\n  const [running, setRunning] = useState(false);\n  const [mode, setMode] = useState(\"POOL\");\n  const [accepted, setAccepted] = useState(0);\n  const [rejected, setRejected] = useState(0);\n  const [stats, setStats] = useState(\"\");\n  const [latestLog, setLatestLog] = useState(\"\");\n\n  // Sync network with backend when network prop changes\n  useEffect(() => {\n    if (network === \"mainnet\" || network === \"testnet\") {\n      fetch(`${API_BASE}/network`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ network }),\n      });\n    }\n  }, [network]);\n\n  const refreshStatus = async () => {\n    const res = await fetch(`${API_BASE}/status`);\n    const data = await res.json();\n    setRunning(data.running);\n    setMode(data.mode);\n    setAccepted(data.accepted);\n    setRejected(data.rejected);\n    setStats(data.latestStats);\n    setLatestLog(data.latestLogLine);\n  };\n\n  const startMiner = async () => {\n    await fetch(`${API_BASE}/start`, { method: \"POST\" });\n    await refreshStatus();\n  };\n\n  const stopMiner = async () => {\n    await fetch(`${API_BASE}/stop`, { method: \"POST\" });\n    await refreshStatus();\n  };\n\n  const toggleMode = async () => {\n    await fetch(`${API_BASE}/toggle`, { method: \"POST\" });\n    await refreshStatus();\n  };\n\n  useEffect(() => {\n    refreshStatus();\n    const interval = setInterval(refreshStatus, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ background: \"#111\", color: \"#fff\", padding: 24, borderRadius: 10 }}>\n      <h2>Miner Control Panel</h2>\n      <p>\n        <b>Status:</b>{\" \"}\n        <span style={{ color: running ? \"lime\" : \"red\" }}>\n          {running ? \"Running\" : \"Stopped\"}\n        </span>\n      </p>\n      <p>\n        <b>Network:</b> {network}\n      </p>\n      <p>\n        <b>Mode:</b> {mode}\n      </p>\n      <p>\n        <b>Stats:</b> {stats || \"Waiting for miner output...\"}\n      </p>\n      <p>\n        <b>Shares:</b> Accepted: {accepted} | Rejected: {rejected}\n      </p>\n      <p>\n        <b>Latest Log:</b> <code>{latestLog.trim()}</code>\n      </p>\n      <div style={{ marginTop: 16 }}>\n        <button onClick={startMiner} disabled={running}>\n          Start Miner\n        </button>{\" \"}\n        <button onClick={stopMiner} disabled={!running}>\n          Stop Miner\n        </button>{\" \"}\n        <button onClick={toggleMode}>Toggle Mode</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}