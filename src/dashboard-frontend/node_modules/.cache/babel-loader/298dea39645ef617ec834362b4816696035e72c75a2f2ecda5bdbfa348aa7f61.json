{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE=\"http://localhost:4201/api/miner\";export default function MinerManager(_ref){let{network}=_ref;const[running,setRunning]=useState(false);const[mode,setMode]=useState(\"POOL\");const[accepted,setAccepted]=useState(0);const[rejected,setRejected]=useState(0);const[stats,setStats]=useState(\"\");const[latestLog,setLatestLog]=useState(\"\");// Sync network with backend when network prop changes\nuseEffect(()=>{if(network===\"mainnet\"||network===\"testnet\"){fetch(\"\".concat(API_BASE,\"/network\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({network})});}},[network]);const refreshStatus=async()=>{const res=await fetch(\"\".concat(API_BASE,\"/status\"));const data=await res.json();setRunning(data.running);setMode(data.mode);setAccepted(data.accepted);setRejected(data.rejected);setStats(data.latestStats);setLatestLog(data.latestLogLine);};const startMiner=async()=>{await fetch(\"\".concat(API_BASE,\"/start\"),{method:\"POST\"});await refreshStatus();};const stopMiner=async()=>{await fetch(\"\".concat(API_BASE,\"/stop\"),{method:\"POST\"});await refreshStatus();};const toggleMode=async()=>{await fetch(\"\".concat(API_BASE,\"/toggle\"),{method:\"POST\"});await refreshStatus();};useEffect(()=>{refreshStatus();const interval=setInterval(refreshStatus,2000);return()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"#111\",color:\"#fff\",padding:24,borderRadius:10},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Miner Control Panel\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Status:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:running?\"lime\":\"red\"},children:running?\"Running\":\"Stopped\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Network:\"}),\" \",network]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Mode:\"}),\" \",mode]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",stats||\"Waiting for miner output...\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Shares:\"}),\" Accepted: \",accepted,\" | Rejected: \",rejected]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Latest Log:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:latestLog.trim()})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16},children:[/*#__PURE__*/_jsx(\"button\",{onClick:startMiner,disabled:running,children:\"Start Miner\"}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:stopMiner,disabled:!running,children:\"Stop Miner\"}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:toggleMode,children:\"Toggle Mode\"})]})]});}","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","API_BASE","MinerManager","_ref","network","running","setRunning","mode","setMode","accepted","setAccepted","rejected","setRejected","stats","setStats","latestLog","setLatestLog","fetch","concat","method","headers","body","JSON","stringify","refreshStatus","res","data","json","latestStats","latestLogLine","startMiner","stopMiner","toggleMode","interval","setInterval","clearInterval","style","background","color","padding","borderRadius","children","trim","marginTop","onClick","disabled"],"sources":["/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/src/MinerManager.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ntype MinerManagerProps = {\n  network: \"mainnet\" | \"testnet\";\n};\n\nconst API_BASE = \"http://localhost:4201/api/miner\";\n\nexport default function MinerManager({ network }: MinerManagerProps) {\n  const [running, setRunning] = useState(false);\n  const [mode, setMode] = useState(\"POOL\");\n  const [accepted, setAccepted] = useState(0);\n  const [rejected, setRejected] = useState(0);\n  const [stats, setStats] = useState(\"\");\n  const [latestLog, setLatestLog] = useState(\"\");\n\n  // Sync network with backend when network prop changes\n  useEffect(() => {\n    if (network === \"mainnet\" || network === \"testnet\") {\n      fetch(`${API_BASE}/network`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ network }),\n      });\n    }\n  }, [network]);\n\n  const refreshStatus = async () => {\n    const res = await fetch(`${API_BASE}/status`);\n    const data = await res.json();\n    setRunning(data.running);\n    setMode(data.mode);\n    setAccepted(data.accepted);\n    setRejected(data.rejected);\n    setStats(data.latestStats);\n    setLatestLog(data.latestLogLine);\n  };\n\n  const startMiner = async () => {\n    await fetch(`${API_BASE}/start`, { method: \"POST\" });\n    await refreshStatus();\n  };\n\n  const stopMiner = async () => {\n    await fetch(`${API_BASE}/stop`, { method: \"POST\" });\n    await refreshStatus();\n  };\n\n  const toggleMode = async () => {\n    await fetch(`${API_BASE}/toggle`, { method: \"POST\" });\n    await refreshStatus();\n  };\n\n  useEffect(() => {\n    refreshStatus();\n    const interval = setInterval(refreshStatus, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ background: \"#111\", color: \"#fff\", padding: 24, borderRadius: 10 }}>\n      <h2>Miner Control Panel</h2>\n      <p>\n        <b>Status:</b>{\" \"}\n        <span style={{ color: running ? \"lime\" : \"red\" }}>\n          {running ? \"Running\" : \"Stopped\"}\n        </span>\n      </p>\n      <p>\n        <b>Network:</b> {network}\n      </p>\n      <p>\n        <b>Mode:</b> {mode}\n      </p>\n      <p>\n        <b>Stats:</b> {stats || \"Waiting for miner output...\"}\n      </p>\n      <p>\n        <b>Shares:</b> Accepted: {accepted} | Rejected: {rejected}\n      </p>\n      <p>\n        <b>Latest Log:</b> <code>{latestLog.trim()}</code>\n      </p>\n      <div style={{ marginTop: 16 }}>\n        <button onClick={startMiner} disabled={running}>\n          Start Miner\n        </button>{\" \"}\n        <button onClick={stopMiner} disabled={!running}>\n          Stop Miner\n        </button>{\" \"}\n        <button onClick={toggleMode}>Toggle Mode</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}