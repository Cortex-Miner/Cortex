{"ast":null,"code":"import _objectSpread from\"/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useRef}from\"react\";import Grid from\"@mui/material/Grid\";import Card from\"@mui/material/Card\";import CardContent from\"@mui/material/CardContent\";import Typography from\"@mui/material/Typography\";import Slider from\"@mui/material/Slider\";import Button from\"@mui/material/Button\";import Box from\"@mui/material/Box\";import Snackbar from\"@mui/material/Snackbar\";import Alert from\"@mui/material/Alert\";import{LineChart,Line,XAxis,YAxis,Tooltip,Legend,ResponsiveContainer}from\"recharts\";import SettingsIcon from\"@mui/icons-material/Settings\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function GpuMonitor(){const[gpus,setGpus]=useState([]);const[history,setHistory]=useState({});const[ocValues,setOcValues]=useState({});const[snackbar,setSnackbar]=useState(null);const intervalRef=useRef(null);// Poll stats every 2s\nuseEffect(()=>{const fetchStats=async()=>{try{const res=await fetch(\"/api/gpu/stats\");const data=await res.json();if(!data.gpus)throw new Error(\"No GPU stats found\");setGpus(data.gpus);setHistory(prev=>{const updated=_objectSpread({},prev);data.gpus.forEach(gpu=>{if(!updated[gpu.index])updated[gpu.index]=[];const arr=[...updated[gpu.index],_objectSpread(_objectSpread({},gpu),{},{time:Date.now()})];updated[gpu.index]=arr.slice(-30);// last 60s if polling every 2s\n});return updated;});}catch(err){setSnackbar({msg:err.message,type:\"error\"});}};fetchStats();intervalRef.current=setInterval(fetchStats,2000);return()=>{if(intervalRef.current)clearInterval(intervalRef.current);};},[]);const handleOcChange=(idx,field,value)=>{setOcValues(prev=>_objectSpread(_objectSpread({},prev),{},{[idx]:_objectSpread(_objectSpread({},prev[idx]),{},{[field]:value})}));};const handleOcApply=async gpu=>{const values=ocValues[gpu.index]||{};try{const body={index:gpu.index};if(gpu.controls.fan&&values.fan!==undefined)body.fan=values.fan;if(gpu.controls.power&&values.powerLimit!==undefined)body.powerLimit=values.powerLimit;if(gpu.controls.coreClock&&values.coreClock!==undefined)body.coreClock=values.coreClock;if(gpu.controls.memClock&&values.memClock!==undefined)body.memClock=values.memClock;if(Object.keys(body).length<=1){setSnackbar({msg:\"No changes selected.\",type:\"error\"});return;}const res=await fetch(\"/api/gpu/overclock\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});const resp=await res.json();if(res.ok){setSnackbar({msg:\"Settings applied!\",type:\"success\"});}else{setSnackbar({msg:resp.error||\"Failed to apply settings\",type:\"error\"});}}catch(err){setSnackbar({msg:err.message,type:\"error\"});}};return/*#__PURE__*/_jsxs(Box,{sx:{background:\"#10131a\",minHeight:\"100vh\",py:5,px:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h3\",color:\"primary\",gutterBottom:true,align:\"center\",children:[/*#__PURE__*/_jsx(SettingsIcon,{fontSize:\"large\"}),\" GPU Monitor & Control\"]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:4,justifyContent:\"center\",children:gpus.map(gpu=>{var _ocValues$gpu$index$f,_ocValues$gpu$index,_ocValues$gpu$index$p,_ocValues$gpu$index2,_ocValues$gpu$index$c,_ocValues$gpu$index3,_ocValues$gpu$index$m,_ocValues$gpu$index4;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,lg:6,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:4,background:\"linear-gradient(135deg, #232940 90%, #1b1e2c 100%)\",boxShadow:6,mb:4},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"secondary\",gutterBottom:true,children:[gpu.name,\" (#\",gpu.index,\")\"]}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",gap:3,flexWrap:\"wrap\"},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",sx:{color:\"#ffbe0b\"},children:[gpu.temp,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{color:\"#00e676\"},children:[gpu.power,\"W\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",sx:{color:\"#2979ff\"},children:[gpu.util,\"%\"]}),/*#__PURE__*/_jsxs(Typography,{sx:{color:\"#b2b2b2\"},children:[\"Fan: \",gpu.fan,\"% \\xA0|\\xA0 Clock: \",gpu.coreClock,\" MHz \\xA0|\\xA0 Mem: \",gpu.memClock,\" MHz\"]}),/*#__PURE__*/_jsxs(Typography,{sx:{color:\"#b2b2b2\"},children:[\"VRAM: \",gpu.memUsed,\" / \",gpu.memTotal,\" MiB\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{height:170,mt:2},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:history[gpu.index]||[],children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\",hide:true}),/*#__PURE__*/_jsx(YAxis,{domain:['auto','auto']}),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:t=>new Date(t).toLocaleTimeString(),formatter:(v,n)=>[v,n.toUpperCase()]}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"temp\",stroke:\"#ffbe0b\",dot:false,name:\"Temp\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"power\",stroke:\"#00e676\",dot:false,name:\"Power\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"util\",stroke:\"#2979ff\",dot:false,name:\"Util\"})]})})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[gpu.controls.fan&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Fan Speed (%)\"}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:(_ocValues$gpu$index$f=(_ocValues$gpu$index=ocValues[gpu.index])===null||_ocValues$gpu$index===void 0?void 0:_ocValues$gpu$index.fan)!==null&&_ocValues$gpu$index$f!==void 0?_ocValues$gpu$index$f:gpu.fan,onChange:(_,v)=>handleOcChange(gpu.index,\"fan\",v),valueLabelDisplay:\"auto\",sx:{color:\"#ffbe0b\"}})]}),gpu.controls.power&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Power Limit (W)\"}),/*#__PURE__*/_jsx(Slider,{min:50,max:gpu.powerLimit,value:(_ocValues$gpu$index$p=(_ocValues$gpu$index2=ocValues[gpu.index])===null||_ocValues$gpu$index2===void 0?void 0:_ocValues$gpu$index2.powerLimit)!==null&&_ocValues$gpu$index$p!==void 0?_ocValues$gpu$index$p:gpu.powerLimit,onChange:(_,v)=>handleOcChange(gpu.index,\"powerLimit\",v),valueLabelDisplay:\"auto\",sx:{color:\"#00e676\"}})]}),gpu.controls.coreClock&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Core Clock Offset (MHz)\"}),/*#__PURE__*/_jsx(Slider,{min:-300,max:300,value:(_ocValues$gpu$index$c=(_ocValues$gpu$index3=ocValues[gpu.index])===null||_ocValues$gpu$index3===void 0?void 0:_ocValues$gpu$index3.coreClock)!==null&&_ocValues$gpu$index$c!==void 0?_ocValues$gpu$index$c:0,onChange:(_,v)=>handleOcChange(gpu.index,\"coreClock\",v),valueLabelDisplay:\"auto\",sx:{color:\"#2979ff\"}})]}),gpu.controls.memClock&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:\"Memory Clock Offset (MHz)\"}),/*#__PURE__*/_jsx(Slider,{min:-1000,max:2000,value:(_ocValues$gpu$index$m=(_ocValues$gpu$index4=ocValues[gpu.index])===null||_ocValues$gpu$index4===void 0?void 0:_ocValues$gpu$index4.memClock)!==null&&_ocValues$gpu$index$m!==void 0?_ocValues$gpu$index$m:0,onChange:(_,v)=>handleOcChange(gpu.index,\"memClock\",v),valueLabelDisplay:\"auto\",sx:{color:\"#ab47bc\"}})]}),(gpu.controls.fan||gpu.controls.power||gpu.controls.coreClock||gpu.controls.memClock)&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",sx:{mt:2},onClick:()=>handleOcApply(gpu),startIcon:/*#__PURE__*/_jsx(SettingsIcon,{}),children:\"Apply Changes\"})]})]})})},gpu.index);})}),/*#__PURE__*/_jsx(Snackbar,{open:!!snackbar,autoHideDuration:5000,onClose:()=>setSnackbar(null),anchorOrigin:{vertical:\"bottom\",horizontal:\"center\"},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setSnackbar(null),severity:(snackbar===null||snackbar===void 0?void 0:snackbar.type)||\"success\",children:snackbar===null||snackbar===void 0?void 0:snackbar.msg})})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","Grid","Card","CardContent","Typography","Slider","Button","Box","Snackbar","Alert","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","SettingsIcon","jsx","_jsx","jsxs","_jsxs","GpuMonitor","gpus","setGpus","history","setHistory","ocValues","setOcValues","snackbar","setSnackbar","intervalRef","fetchStats","res","fetch","data","json","Error","prev","updated","_objectSpread","forEach","gpu","index","arr","time","Date","now","slice","err","msg","message","type","current","setInterval","clearInterval","handleOcChange","idx","field","value","handleOcApply","values","body","controls","fan","undefined","power","powerLimit","coreClock","memClock","Object","keys","length","method","headers","JSON","stringify","resp","ok","error","sx","background","minHeight","py","px","children","variant","color","gutterBottom","align","fontSize","container","spacing","justifyContent","map","_ocValues$gpu$index$f","_ocValues$gpu$index","_ocValues$gpu$index$p","_ocValues$gpu$index2","_ocValues$gpu$index$c","_ocValues$gpu$index3","_ocValues$gpu$index$m","_ocValues$gpu$index4","item","xs","md","lg","borderRadius","boxShadow","mb","name","display","gap","flexWrap","temp","util","memUsed","memTotal","height","mt","width","dataKey","hide","domain","labelFormatter","t","toLocaleTimeString","formatter","v","n","toUpperCase","stroke","dot","min","max","onChange","_","valueLabelDisplay","onClick","startIcon","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity"],"sources":["/home/arohbe/ergo_cuda_miner/src/dashboard-frontend/src/GpuMonitor.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\n\ntype GpuStat = {\n  index: number;\n  name: string;\n  temp: number;\n  util: number;\n  fan: number;\n  coreClock: number;\n  memClock: number;\n  power: number;\n  powerLimit: number;\n  memUsed: number;\n  memTotal: number;\n  controls: {\n    fan: boolean;\n    power: boolean;\n    coreClock: boolean;\n    memClock: boolean;\n  };\n};\n\ntype HistoryPoint = GpuStat & { time: number };\n\nexport default function GpuMonitor() {\n  const [gpus, setGpus] = useState<GpuStat[]>([]);\n  const [history, setHistory] = useState<{ [idx: number]: HistoryPoint[] }>({});\n  const [ocValues, setOcValues] = useState<{ [idx: number]: any }>({});\n  const [snackbar, setSnackbar] = useState<{ msg: string, type: \"success\" | \"error\" } | null>(null);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Poll stats every 2s\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const res = await fetch(\"/api/gpu/stats\");\n        const data = await res.json();\n        if (!data.gpus) throw new Error(\"No GPU stats found\");\n        setGpus(data.gpus);\n        setHistory(prev => {\n          const updated = { ...prev };\n          data.gpus.forEach((gpu: GpuStat) => {\n            if (!updated[gpu.index]) updated[gpu.index] = [];\n            const arr = [...updated[gpu.index], { ...gpu, time: Date.now() }];\n            updated[gpu.index] = arr.slice(-30); // last 60s if polling every 2s\n          });\n          return updated;\n        });\n      } catch (err: any) {\n        setSnackbar({ msg: err.message, type: \"error\" });\n      }\n    };\n    fetchStats();\n    intervalRef.current = setInterval(fetchStats, 2000);\n    return () => { if (intervalRef.current) clearInterval(intervalRef.current); };\n  }, []);\n\n  const handleOcChange = (idx: number, field: string, value: number) => {\n    setOcValues(prev => ({\n      ...prev,\n      [idx]: { ...prev[idx], [field]: value }\n    }));\n  };\n\n  const handleOcApply = async (gpu: GpuStat) => {\n    const values = ocValues[gpu.index] || {};\n    try {\n      const body: any = { index: gpu.index };\n      if (gpu.controls.fan && values.fan !== undefined) body.fan = values.fan;\n      if (gpu.controls.power && values.powerLimit !== undefined) body.powerLimit = values.powerLimit;\n      if (gpu.controls.coreClock && values.coreClock !== undefined) body.coreClock = values.coreClock;\n      if (gpu.controls.memClock && values.memClock !== undefined) body.memClock = values.memClock;\n\n      if (Object.keys(body).length <= 1) {\n        setSnackbar({ msg: \"No changes selected.\", type: \"error\" });\n        return;\n      }\n\n      const res = await fetch(\"/api/gpu/overclock\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n      });\n      const resp = await res.json();\n      if (res.ok) {\n        setSnackbar({ msg: \"Settings applied!\", type: \"success\" });\n      } else {\n        setSnackbar({ msg: resp.error || \"Failed to apply settings\", type: \"error\" });\n      }\n    } catch (err: any) {\n      setSnackbar({ msg: err.message, type: \"error\" });\n    }\n  };\n\n  return (\n    <Box sx={{ background: \"#10131a\", minHeight: \"100vh\", py: 5, px: 2 }}>\n      <Typography variant=\"h3\" color=\"primary\" gutterBottom align=\"center\">\n        <SettingsIcon fontSize=\"large\" /> GPU Monitor &amp; Control\n      </Typography>\n      <Grid container spacing={4} justifyContent=\"center\">\n        {gpus.map(gpu => (\n          <Grid item xs={12} md={8} lg={6} key={gpu.index}>\n            <Card sx={{\n              borderRadius: 4,\n              background: \"linear-gradient(135deg, #232940 90%, #1b1e2c 100%)\",\n              boxShadow: 6,\n              mb: 4\n            }}>\n              <CardContent>\n                <Typography variant=\"h5\" color=\"secondary\" gutterBottom>\n                  {gpu.name} (#{gpu.index})\n                </Typography>\n                <Box sx={{ display: \"flex\", gap: 3, flexWrap: \"wrap\" }}>\n                  <Typography variant=\"h4\" sx={{ color: \"#ffbe0b\" }}>\n                    {gpu.temp}°C\n                  </Typography>\n                  <Typography variant=\"h5\" sx={{ color: \"#00e676\" }}>\n                    {gpu.power}W\n                  </Typography>\n                  <Typography variant=\"h5\" sx={{ color: \"#2979ff\" }}>\n                    {gpu.util}%\n                  </Typography>\n                  <Typography sx={{ color: \"#b2b2b2\" }}>\n                    Fan: {gpu.fan}% &nbsp;|&nbsp; Clock: {gpu.coreClock} MHz &nbsp;|&nbsp; Mem: {gpu.memClock} MHz\n                  </Typography>\n                  <Typography sx={{ color: \"#b2b2b2\" }}>\n                    VRAM: {gpu.memUsed} / {gpu.memTotal} MiB\n                  </Typography>\n                </Box>\n                <Box sx={{ height: 170, mt: 2 }}>\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={history[gpu.index] || []}>\n                      <XAxis dataKey=\"time\" hide />\n                      <YAxis domain={['auto', 'auto']} />\n                      <Tooltip\n                        labelFormatter={t => new Date(t).toLocaleTimeString()}\n                        formatter={(v: any, n: any) => [v, n.toUpperCase()]}\n                      />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"temp\" stroke=\"#ffbe0b\" dot={false} name=\"Temp\" />\n                      <Line type=\"monotone\" dataKey=\"power\" stroke=\"#00e676\" dot={false} name=\"Power\" />\n                      <Line type=\"monotone\" dataKey=\"util\" stroke=\"#2979ff\" dot={false} name=\"Util\" />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </Box>\n                {/* Overclock Controls */}\n                <Box sx={{ mt: 3 }}>\n                  {gpu.controls.fan && (\n                    <Box mb={2}>\n                      <Typography>Fan Speed (%)</Typography>\n                      <Slider\n                        min={0} max={100}\n                        value={ocValues[gpu.index]?.fan ?? gpu.fan}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"fan\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#ffbe0b\" }}\n                      />\n                    </Box>\n                  )}\n                  {gpu.controls.power && (\n                    <Box mb={2}>\n                      <Typography>Power Limit (W)</Typography>\n                      <Slider\n                        min={50} max={gpu.powerLimit}\n                        value={ocValues[gpu.index]?.powerLimit ?? gpu.powerLimit}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"powerLimit\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#00e676\" }}\n                      />\n                    </Box>\n                  )}\n                  {gpu.controls.coreClock && (\n                    <Box mb={2}>\n                      <Typography>Core Clock Offset (MHz)</Typography>\n                      <Slider\n                        min={-300} max={300}\n                        value={ocValues[gpu.index]?.coreClock ?? 0}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"coreClock\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#2979ff\" }}\n                      />\n                    </Box>\n                  )}\n                  {gpu.controls.memClock && (\n                    <Box mb={2}>\n                      <Typography>Memory Clock Offset (MHz)</Typography>\n                      <Slider\n                        min={-1000} max={2000}\n                        value={ocValues[gpu.index]?.memClock ?? 0}\n                        onChange={(_, v) => handleOcChange(gpu.index, \"memClock\", v as number)}\n                        valueLabelDisplay=\"auto\"\n                        sx={{ color: \"#ab47bc\" }}\n                      />\n                    </Box>\n                  )}\n                  {(gpu.controls.fan || gpu.controls.power || gpu.controls.coreClock || gpu.controls.memClock) && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      sx={{ mt: 2 }}\n                      onClick={() => handleOcApply(gpu)}\n                      startIcon={<SettingsIcon />}\n                    >\n                      Apply Changes\n                    </Button>\n                  )}\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      {/* Snackbar for errors/success */}\n      <Snackbar\n        open={!!snackbar}\n        autoHideDuration={5000}\n        onClose={() => setSnackbar(null)}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      >\n        <Alert onClose={() => setSnackbar(null)} severity={snackbar?.type || \"success\"}>\n          {snackbar?.msg}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n"],"mappings":"wIAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,GAAG,KAAM,mBAAmB,CACnC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,KAAK,KAAM,qBAAqB,CACvC,OAASC,SAAS,CAAEC,IAAI,CAAEC,KAAK,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,CAAEC,mBAAmB,KAAQ,UAAU,CAC9F,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAwBxD,cAAe,SAAS,CAAAC,UAAUA,CAAA,CAAG,CACnC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGzB,QAAQ,CAAY,EAAE,CAAC,CAC/C,KAAM,CAAC0B,OAAO,CAAEC,UAAU,CAAC,CAAG3B,QAAQ,CAAoC,CAAC,CAAC,CAAC,CAC7E,KAAM,CAAC4B,QAAQ,CAAEC,WAAW,CAAC,CAAG7B,QAAQ,CAAyB,CAAC,CAAC,CAAC,CACpE,KAAM,CAAC8B,QAAQ,CAAEC,WAAW,CAAC,CAAG/B,QAAQ,CAAoD,IAAI,CAAC,CACjG,KAAM,CAAAgC,WAAW,CAAG/B,MAAM,CAAwB,IAAI,CAAC,CAEvD;AACAF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CACzC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CAC7B,GAAI,CAACD,IAAI,CAACZ,IAAI,CAAE,KAAM,IAAI,CAAAc,KAAK,CAAC,oBAAoB,CAAC,CACrDb,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAClBG,UAAU,CAACY,IAAI,EAAI,CACjB,KAAM,CAAAC,OAAO,CAAAC,aAAA,IAAQF,IAAI,CAAE,CAC3BH,IAAI,CAACZ,IAAI,CAACkB,OAAO,CAAEC,GAAY,EAAK,CAClC,GAAI,CAACH,OAAO,CAACG,GAAG,CAACC,KAAK,CAAC,CAAEJ,OAAO,CAACG,GAAG,CAACC,KAAK,CAAC,CAAG,EAAE,CAChD,KAAM,CAAAC,GAAG,CAAG,CAAC,GAAGL,OAAO,CAACG,GAAG,CAACC,KAAK,CAAC,CAAAH,aAAA,CAAAA,aAAA,IAAOE,GAAG,MAAEG,IAAI,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CACjER,OAAO,CAACG,GAAG,CAACC,KAAK,CAAC,CAAGC,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAE;AACvC,CAAC,CAAC,CACF,MAAO,CAAAT,OAAO,CAChB,CAAC,CAAC,CACJ,CAAE,MAAOU,GAAQ,CAAE,CACjBnB,WAAW,CAAC,CAAEoB,GAAG,CAAED,GAAG,CAACE,OAAO,CAAEC,IAAI,CAAE,OAAQ,CAAC,CAAC,CAClD,CACF,CAAC,CACDpB,UAAU,CAAC,CAAC,CACZD,WAAW,CAACsB,OAAO,CAAGC,WAAW,CAACtB,UAAU,CAAE,IAAI,CAAC,CACnD,MAAO,IAAM,CAAE,GAAID,WAAW,CAACsB,OAAO,CAAEE,aAAa,CAACxB,WAAW,CAACsB,OAAO,CAAC,CAAE,CAAC,CAC/E,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,cAAc,CAAGA,CAACC,GAAW,CAAEC,KAAa,CAAEC,KAAa,GAAK,CACpE/B,WAAW,CAACU,IAAI,EAAAE,aAAA,CAAAA,aAAA,IACXF,IAAI,MACP,CAACmB,GAAG,EAAAjB,aAAA,CAAAA,aAAA,IAAQF,IAAI,CAACmB,GAAG,CAAC,MAAE,CAACC,KAAK,EAAGC,KAAK,EAAE,EACvC,CAAC,CACL,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAlB,GAAY,EAAK,CAC5C,KAAM,CAAAmB,MAAM,CAAGlC,QAAQ,CAACe,GAAG,CAACC,KAAK,CAAC,EAAI,CAAC,CAAC,CACxC,GAAI,CACF,KAAM,CAAAmB,IAAS,CAAG,CAAEnB,KAAK,CAAED,GAAG,CAACC,KAAM,CAAC,CACtC,GAAID,GAAG,CAACqB,QAAQ,CAACC,GAAG,EAAIH,MAAM,CAACG,GAAG,GAAKC,SAAS,CAAEH,IAAI,CAACE,GAAG,CAAGH,MAAM,CAACG,GAAG,CACvE,GAAItB,GAAG,CAACqB,QAAQ,CAACG,KAAK,EAAIL,MAAM,CAACM,UAAU,GAAKF,SAAS,CAAEH,IAAI,CAACK,UAAU,CAAGN,MAAM,CAACM,UAAU,CAC9F,GAAIzB,GAAG,CAACqB,QAAQ,CAACK,SAAS,EAAIP,MAAM,CAACO,SAAS,GAAKH,SAAS,CAAEH,IAAI,CAACM,SAAS,CAAGP,MAAM,CAACO,SAAS,CAC/F,GAAI1B,GAAG,CAACqB,QAAQ,CAACM,QAAQ,EAAIR,MAAM,CAACQ,QAAQ,GAAKJ,SAAS,CAAEH,IAAI,CAACO,QAAQ,CAAGR,MAAM,CAACQ,QAAQ,CAE3F,GAAIC,MAAM,CAACC,IAAI,CAACT,IAAI,CAAC,CAACU,MAAM,EAAI,CAAC,CAAE,CACjC1C,WAAW,CAAC,CAAEoB,GAAG,CAAE,sBAAsB,CAAEE,IAAI,CAAE,OAAQ,CAAC,CAAC,CAC3D,OACF,CAEA,KAAM,CAAAnB,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,oBAAoB,CAAE,CAC5CuC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CZ,IAAI,CAAEa,IAAI,CAACC,SAAS,CAACd,IAAI,CAC3B,CAAC,CAAC,CACF,KAAM,CAAAe,IAAI,CAAG,KAAM,CAAA5C,GAAG,CAACG,IAAI,CAAC,CAAC,CAC7B,GAAIH,GAAG,CAAC6C,EAAE,CAAE,CACVhD,WAAW,CAAC,CAAEoB,GAAG,CAAE,mBAAmB,CAAEE,IAAI,CAAE,SAAU,CAAC,CAAC,CAC5D,CAAC,IAAM,CACLtB,WAAW,CAAC,CAAEoB,GAAG,CAAE2B,IAAI,CAACE,KAAK,EAAI,0BAA0B,CAAE3B,IAAI,CAAE,OAAQ,CAAC,CAAC,CAC/E,CACF,CAAE,MAAOH,GAAQ,CAAE,CACjBnB,WAAW,CAAC,CAAEoB,GAAG,CAAED,GAAG,CAACE,OAAO,CAAEC,IAAI,CAAE,OAAQ,CAAC,CAAC,CAClD,CACF,CAAC,CAED,mBACE/B,KAAA,CAACd,GAAG,EAACyE,EAAE,CAAE,CAAEC,UAAU,CAAE,SAAS,CAAEC,SAAS,CAAE,OAAO,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eACnEhE,KAAA,CAACjB,UAAU,EAACkF,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,SAAS,CAACC,YAAY,MAACC,KAAK,CAAC,QAAQ,CAAAJ,QAAA,eAClElE,IAAA,CAACF,YAAY,EAACyE,QAAQ,CAAC,OAAO,CAAE,CAAC,yBACnC,EAAY,CAAC,cACbvE,IAAA,CAAClB,IAAI,EAAC0F,SAAS,MAACC,OAAO,CAAE,CAAE,CAACC,cAAc,CAAC,QAAQ,CAAAR,QAAA,CAChD9D,IAAI,CAACuE,GAAG,CAACpD,GAAG,OAAAqD,qBAAA,CAAAC,mBAAA,CAAAC,qBAAA,CAAAC,oBAAA,CAAAC,qBAAA,CAAAC,oBAAA,CAAAC,qBAAA,CAAAC,oBAAA,oBACXnF,IAAA,CAAClB,IAAI,EAACsG,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAArB,QAAA,cAC9BlE,IAAA,CAACjB,IAAI,EAAC8E,EAAE,CAAE,CACR2B,YAAY,CAAE,CAAC,CACf1B,UAAU,CAAE,oDAAoD,CAChE2B,SAAS,CAAE,CAAC,CACZC,EAAE,CAAE,CACN,CAAE,CAAAxB,QAAA,cACAhE,KAAA,CAAClB,WAAW,EAAAkF,QAAA,eACVhE,KAAA,CAACjB,UAAU,EAACkF,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,WAAW,CAACC,YAAY,MAAAH,QAAA,EACpD3C,GAAG,CAACoE,IAAI,CAAC,KAAG,CAACpE,GAAG,CAACC,KAAK,CAAC,GAC1B,EAAY,CAAC,cACbtB,KAAA,CAACd,GAAG,EAACyE,EAAE,CAAE,CAAE+B,OAAO,CAAE,MAAM,CAAEC,GAAG,CAAE,CAAC,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAA5B,QAAA,eACrDhE,KAAA,CAACjB,UAAU,EAACkF,OAAO,CAAC,IAAI,CAACN,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAAAF,QAAA,EAC/C3C,GAAG,CAACwE,IAAI,CAAC,OACZ,EAAY,CAAC,cACb7F,KAAA,CAACjB,UAAU,EAACkF,OAAO,CAAC,IAAI,CAACN,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAAAF,QAAA,EAC/C3C,GAAG,CAACwB,KAAK,CAAC,GACb,EAAY,CAAC,cACb7C,KAAA,CAACjB,UAAU,EAACkF,OAAO,CAAC,IAAI,CAACN,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAAAF,QAAA,EAC/C3C,GAAG,CAACyE,IAAI,CAAC,GACZ,EAAY,CAAC,cACb9F,KAAA,CAACjB,UAAU,EAAC4E,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAAAF,QAAA,EAAC,OAC/B,CAAC3C,GAAG,CAACsB,GAAG,CAAC,qBAAuB,CAACtB,GAAG,CAAC0B,SAAS,CAAC,sBAAwB,CAAC1B,GAAG,CAAC2B,QAAQ,CAAC,MAC5F,EAAY,CAAC,cACbhD,KAAA,CAACjB,UAAU,EAAC4E,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAAAF,QAAA,EAAC,QAC9B,CAAC3C,GAAG,CAAC0E,OAAO,CAAC,KAAG,CAAC1E,GAAG,CAAC2E,QAAQ,CAAC,MACtC,EAAY,CAAC,EACV,CAAC,cACNlG,IAAA,CAACZ,GAAG,EAACyE,EAAE,CAAE,CAAEsC,MAAM,CAAE,GAAG,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAlC,QAAA,cAC9BlE,IAAA,CAACH,mBAAmB,EAACwG,KAAK,CAAC,MAAM,CAACF,MAAM,CAAC,MAAM,CAAAjC,QAAA,cAC7ChE,KAAA,CAACX,SAAS,EAACyB,IAAI,CAAEV,OAAO,CAACiB,GAAG,CAACC,KAAK,CAAC,EAAI,EAAG,CAAA0C,QAAA,eACxClE,IAAA,CAACP,KAAK,EAAC6G,OAAO,CAAC,MAAM,CAACC,IAAI,MAAE,CAAC,cAC7BvG,IAAA,CAACN,KAAK,EAAC8G,MAAM,CAAE,CAAC,MAAM,CAAE,MAAM,CAAE,CAAE,CAAC,cACnCxG,IAAA,CAACL,OAAO,EACN8G,cAAc,CAAEC,CAAC,EAAI,GAAI,CAAA/E,IAAI,CAAC+E,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAE,CACtDC,SAAS,CAAEA,CAACC,CAAM,CAAEC,CAAM,GAAK,CAACD,CAAC,CAAEC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAE,CACrD,CAAC,cACF/G,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVI,IAAA,CAACR,IAAI,EAACyC,IAAI,CAAC,UAAU,CAACqE,OAAO,CAAC,MAAM,CAACU,MAAM,CAAC,SAAS,CAACC,GAAG,CAAE,KAAM,CAACtB,IAAI,CAAC,MAAM,CAAE,CAAC,cAChF3F,IAAA,CAACR,IAAI,EAACyC,IAAI,CAAC,UAAU,CAACqE,OAAO,CAAC,OAAO,CAACU,MAAM,CAAC,SAAS,CAACC,GAAG,CAAE,KAAM,CAACtB,IAAI,CAAC,OAAO,CAAE,CAAC,cAClF3F,IAAA,CAACR,IAAI,EAACyC,IAAI,CAAC,UAAU,CAACqE,OAAO,CAAC,MAAM,CAACU,MAAM,CAAC,SAAS,CAACC,GAAG,CAAE,KAAM,CAACtB,IAAI,CAAC,MAAM,CAAE,CAAC,EACvE,CAAC,CACO,CAAC,CACnB,CAAC,cAENzF,KAAA,CAACd,GAAG,EAACyE,EAAE,CAAE,CAAEuC,EAAE,CAAE,CAAE,CAAE,CAAAlC,QAAA,EAChB3C,GAAG,CAACqB,QAAQ,CAACC,GAAG,eACf3C,KAAA,CAACd,GAAG,EAACsG,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACTlE,IAAA,CAACf,UAAU,EAAAiF,QAAA,CAAC,eAAa,CAAY,CAAC,cACtClE,IAAA,CAACd,MAAM,EACLgI,GAAG,CAAE,CAAE,CAACC,GAAG,CAAE,GAAI,CACjB3E,KAAK,EAAAoC,qBAAA,EAAAC,mBAAA,CAAErE,QAAQ,CAACe,GAAG,CAACC,KAAK,CAAC,UAAAqD,mBAAA,iBAAnBA,mBAAA,CAAqBhC,GAAG,UAAA+B,qBAAA,UAAAA,qBAAA,CAAIrD,GAAG,CAACsB,GAAI,CAC3CuE,QAAQ,CAAEA,CAACC,CAAC,CAAER,CAAC,GAAKxE,cAAc,CAACd,GAAG,CAACC,KAAK,CAAE,KAAK,CAAEqF,CAAW,CAAE,CAClES,iBAAiB,CAAC,MAAM,CACxBzD,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAC1B,CAAC,EACC,CACN,CACA7C,GAAG,CAACqB,QAAQ,CAACG,KAAK,eACjB7C,KAAA,CAACd,GAAG,EAACsG,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACTlE,IAAA,CAACf,UAAU,EAAAiF,QAAA,CAAC,iBAAe,CAAY,CAAC,cACxClE,IAAA,CAACd,MAAM,EACLgI,GAAG,CAAE,EAAG,CAACC,GAAG,CAAE5F,GAAG,CAACyB,UAAW,CAC7BR,KAAK,EAAAsC,qBAAA,EAAAC,oBAAA,CAAEvE,QAAQ,CAACe,GAAG,CAACC,KAAK,CAAC,UAAAuD,oBAAA,iBAAnBA,oBAAA,CAAqB/B,UAAU,UAAA8B,qBAAA,UAAAA,qBAAA,CAAIvD,GAAG,CAACyB,UAAW,CACzDoE,QAAQ,CAAEA,CAACC,CAAC,CAAER,CAAC,GAAKxE,cAAc,CAACd,GAAG,CAACC,KAAK,CAAE,YAAY,CAAEqF,CAAW,CAAE,CACzES,iBAAiB,CAAC,MAAM,CACxBzD,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAC1B,CAAC,EACC,CACN,CACA7C,GAAG,CAACqB,QAAQ,CAACK,SAAS,eACrB/C,KAAA,CAACd,GAAG,EAACsG,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACTlE,IAAA,CAACf,UAAU,EAAAiF,QAAA,CAAC,yBAAuB,CAAY,CAAC,cAChDlE,IAAA,CAACd,MAAM,EACLgI,GAAG,CAAE,CAAC,GAAI,CAACC,GAAG,CAAE,GAAI,CACpB3E,KAAK,EAAAwC,qBAAA,EAAAC,oBAAA,CAAEzE,QAAQ,CAACe,GAAG,CAACC,KAAK,CAAC,UAAAyD,oBAAA,iBAAnBA,oBAAA,CAAqBhC,SAAS,UAAA+B,qBAAA,UAAAA,qBAAA,CAAI,CAAE,CAC3CoC,QAAQ,CAAEA,CAACC,CAAC,CAAER,CAAC,GAAKxE,cAAc,CAACd,GAAG,CAACC,KAAK,CAAE,WAAW,CAAEqF,CAAW,CAAE,CACxES,iBAAiB,CAAC,MAAM,CACxBzD,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAC1B,CAAC,EACC,CACN,CACA7C,GAAG,CAACqB,QAAQ,CAACM,QAAQ,eACpBhD,KAAA,CAACd,GAAG,EAACsG,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACTlE,IAAA,CAACf,UAAU,EAAAiF,QAAA,CAAC,2BAAyB,CAAY,CAAC,cAClDlE,IAAA,CAACd,MAAM,EACLgI,GAAG,CAAE,CAAC,IAAK,CAACC,GAAG,CAAE,IAAK,CACtB3E,KAAK,EAAA0C,qBAAA,EAAAC,oBAAA,CAAE3E,QAAQ,CAACe,GAAG,CAACC,KAAK,CAAC,UAAA2D,oBAAA,iBAAnBA,oBAAA,CAAqBjC,QAAQ,UAAAgC,qBAAA,UAAAA,qBAAA,CAAI,CAAE,CAC1CkC,QAAQ,CAAEA,CAACC,CAAC,CAAER,CAAC,GAAKxE,cAAc,CAACd,GAAG,CAACC,KAAK,CAAE,UAAU,CAAEqF,CAAW,CAAE,CACvES,iBAAiB,CAAC,MAAM,CACxBzD,EAAE,CAAE,CAAEO,KAAK,CAAE,SAAU,CAAE,CAC1B,CAAC,EACC,CACN,CACA,CAAC7C,GAAG,CAACqB,QAAQ,CAACC,GAAG,EAAItB,GAAG,CAACqB,QAAQ,CAACG,KAAK,EAAIxB,GAAG,CAACqB,QAAQ,CAACK,SAAS,EAAI1B,GAAG,CAACqB,QAAQ,CAACM,QAAQ,gBACzFlD,IAAA,CAACb,MAAM,EACLgF,OAAO,CAAC,WAAW,CACnBC,KAAK,CAAC,SAAS,CACfP,EAAE,CAAE,CAAEuC,EAAE,CAAE,CAAE,CAAE,CACdmB,OAAO,CAAEA,CAAA,GAAM9E,aAAa,CAAClB,GAAG,CAAE,CAClCiG,SAAS,cAAExH,IAAA,CAACF,YAAY,GAAE,CAAE,CAAAoE,QAAA,CAC7B,eAED,CAAQ,CACT,EACE,CAAC,EACK,CAAC,CACV,CAAC,EA3G6B3C,GAAG,CAACC,KA4GpC,CAAC,EACR,CAAC,CACE,CAAC,cAEPxB,IAAA,CAACX,QAAQ,EACPoI,IAAI,CAAE,CAAC,CAAC/G,QAAS,CACjBgH,gBAAgB,CAAE,IAAK,CACvBC,OAAO,CAAEA,CAAA,GAAMhH,WAAW,CAAC,IAAI,CAAE,CACjCiH,YAAY,CAAE,CAAEC,QAAQ,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAA5D,QAAA,cAE3DlE,IAAA,CAACV,KAAK,EAACqI,OAAO,CAAEA,CAAA,GAAMhH,WAAW,CAAC,IAAI,CAAE,CAACoH,QAAQ,CAAE,CAAArH,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEuB,IAAI,GAAI,SAAU,CAAAiC,QAAA,CAC5ExD,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEqB,GAAG,CACT,CAAC,CACA,CAAC,EACR,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}